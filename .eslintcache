[{"/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/App.js":"1","/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/API/crud.js":"2","/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/firebase.js":"3","/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/components/TableReclamo.jsx":"4","/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/container/SeguimientoReclamoContainer.jsx":"5"},{"size":2554,"mtime":1606380144624,"results":"6","hashOfConfig":"7"},{"size":627,"mtime":1606380607332,"results":"8","hashOfConfig":"7"},{"size":717,"mtime":1606380689689,"results":"9","hashOfConfig":"7"},{"size":2984,"mtime":1606382251560,"results":"10","hashOfConfig":"7"},{"size":375,"mtime":1606381969806,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"101vb49",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/App.js",["23","24","25","26"],"/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/API/crud.js",[],"/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/firebase.js",[],"/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/components/TableReclamo.jsx",["27"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core/\";\nimport { Link } from \"react-router-dom\";\nimport { listenAllDocs } from \"../API/crud\";\n// import Badge from \"./Badge\";\n// import \"./ClientTable.scss\";\n// import headerColumn from \"../API/headerTable\";\n\nfunction RecoDetails() {\n  const [empresa, setEmpresa] = useState(\"Todos\");\n\n  function handleSelect(e) {\n    e.preventDefault();\n    setEmpresa(e.currentTarget.value);\n  }\n  function handleSubmit(e) {\n    alert(`valor capturado ${empresa}`);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"detalles-de-recomendacion\" onSubmit={handleSubmit}>\n      <select value={empresa} onChange={handleSelect}>\n        <option value=\"Todos\">Filtrar por</option>\n        <option value=\"Empresa-B1\">Estado</option>\n        <option value=\"Empresa-B2\">Tipo de reclamo</option>\n        <option value=\"Empresa-B3\">Fecha de reclamo</option>\n      </select>\n    </form>\n  );\n}\n\nfunction TableReclamo() {\n  const [rowData, setRowData] = useState([]);\n\n  useEffect(() => {\n    listenAllDocs(setRowData);\n  }, []);\n\n  const headerColumn = [\n    {\n      id: \"01\",\n      label: \"Editar Estado\",\n    },\n    {\n      id: \"02\",\n      label: \"Prov\",\n    },\n    {\n      id: \"03\",\n      label: \"Giro Comercial\",\n    },\n    {\n      id: \"04\",\n      label: \"RUC\",\n    },\n    {\n      id: \"05\",\n      label: \"Tipo de prov.\",\n    },\n    {\n      id: \"06\",\n      label: \"Tipo de Reclamo\",\n    },\n    {\n      id: \"07\",\n      label: \"Estado\",\n    },\n  ];\n\n  return (\n    <>\n      <RecoDetails />\n      <Paper>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {headerColumn.map((column) => (\n                  <TableCell key={column.id}>{column.label}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rowData.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>\n                    {/* <Badge name={row.status} className={row.status} /> */}\n                  </TableCell>\n                  <TableCell>{row.proveedor}</TableCell>\n                  <TableCell>{row.giroComercial}</TableCell>\n                  <TableCell>{row.ruc}</TableCell>\n                  <TableCell>{row.tipoProveedor}</TableCell>\n                  <TableCell>{row.tipoReclamo}</TableCell>\n                  <TableCell>{row.estado}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </>\n  );\n}\nexport default TableReclamo;\n\n{\n  /* <TableCell>\n                    <Link to={`/cliente/recomendaciones:${row.id}`}>\n                      <button type=\"button\" className=\"ver-mas\">\n                        Ver m√°s\n                      </button>\n                    </Link>\n                  </TableCell> */\n}\n","/mnt/d/ALME/Laboratoria/hackaton/reto-gym/src/container/SeguimientoReclamoContainer.jsx",[],{"ruleId":"28","severity":1,"message":"29","line":21,"column":10,"nodeType":"30","messageId":"31","endLine":21,"endColumn":23},{"ruleId":"28","severity":1,"message":"32","line":36,"column":10,"nodeType":"30","messageId":"31","endLine":36,"endColumn":26},{"ruleId":"28","severity":1,"message":"33","line":52,"column":10,"nodeType":"30","messageId":"31","endLine":52,"endColumn":24},{"ruleId":"28","severity":1,"message":"34","line":52,"column":26,"nodeType":"30","messageId":"31","endLine":52,"endColumn":43},{"ruleId":"28","severity":1,"message":"35","line":11,"column":10,"nodeType":"30","messageId":"31","endLine":11,"endColumn":14},"no-unused-vars","'LoggedInRoute' is defined but never used.","Identifier","unusedVar","'NonLoggedInRoute' is defined but never used.","'isUserLoggedIn' is assigned a value but never used.","'setIsUserLoggedIn' is assigned a value but never used.","'Link' is defined but never used."]